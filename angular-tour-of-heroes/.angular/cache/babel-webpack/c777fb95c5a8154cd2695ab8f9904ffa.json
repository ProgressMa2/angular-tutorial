{"ast":null,"code":"import { of } from 'rxjs';\nimport { HEROES } from './mock-heroes';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./message.service\";\nexport let HeroService = /*#__PURE__*/(() => {\n  class HeroService {\n    constructor(http, messageService) {\n      this.http = http;\n      this.messageService = messageService;\n      this.heroesUrl = 'api/heroes'; // Web APIのURL\n    }\n\n    getHeroes() {\n      const heroes = of(HEROES);\n      return heroes;\n    }\n\n    getHero(id) {\n      // For now, assume that a hero with the specified `id` always exists.\n      // Error handling will be added in the next step of the tutorial.\n      const hero = HEROES.find(h => h.id === id);\n      this.messageService.add(`HeroService: fetched hero id=${id}`);\n      return of(hero);\n    }\n    /** HeroServiceのメッセージをMessageServiceを使って記録 */\n\n\n    log(message) {\n      this.messageService.add(`HeroService: ${message}`);\n    }\n\n  }\n\n  HeroService.ɵfac = function HeroService_Factory(t) {\n    return new (t || HeroService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService));\n  };\n\n  HeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HeroService,\n    factory: HeroService.ɵfac,\n    providedIn: 'root'\n  });\n  return HeroService;\n})();","map":null,"metadata":{},"sourceType":"module"}